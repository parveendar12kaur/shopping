"use strict";

exports.__esModule = true;
exports.ElectrodeApplication = undefined;

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require("babel-runtime/helpers/inherits");

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _wmreactAnalytics = require("@walmart/wmreact-analytics");

var _canary = require("@walmart/canary");

var _canary2 = _interopRequireDefault(_canary);

var _exenv = require("exenv");

var _exenv2 = _interopRequireDefault(_exenv);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
A base application component for Electrode applications.
@examples
```jsx
<ElectrodeApplication>
  <div>Your application.</div>
</ElectrodeApplication>
```
*/
var ElectrodeApplication = exports.ElectrodeApplication = function (_React$Component) {
  (0, _inherits3.default)(ElectrodeApplication, _React$Component);

  function ElectrodeApplication(props) {
    (0, _classCallCheck3.default)(this, ElectrodeApplication);

    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

    _this.state = {
      canary: props.canary
    };

    _this.state.canary.log(function (evt) {
      if (props.canaryLog) {
        props.canaryLog(evt);
      }
    });

    _this.state.canary.message(function (message) {
      if (props.canaryMessage) {
        props.canaryMessage(message);
      }
    });

    if (props.canaryRules) {
      _this.state.canary.applyRules(props.canaryRules);
    }

    _this._onAnalyticsEvent = _this._onAnalyticsEvent.bind(_this);
    return _this;
  }

  ElectrodeApplication.prototype.componentDidMount = function componentDidMount() {
    if (_exenv2.default.canUseDOM) {
      this._onAnalyticsEvent({ _type: "application-mounted" });
    }
  };

  ElectrodeApplication.prototype._onAnalyticsEvent = function _onAnalyticsEvent(event) {
    var canary = this.state.canary;

    if (canary) {
      canary.process(event);
    }

    var onAnalyticsEvent = this.props.onAnalyticsEvent;

    if (onAnalyticsEvent) {
      onAnalyticsEvent(event);
    }
  };

  ElectrodeApplication.prototype.render = function render() {
    var appContext = {};
    if (_exenv2.default.canUseDOM) {
      appContext.url = document.location.href;
    }
    return _react2.default.createElement(
      _wmreactAnalytics.AnalyticsProvider,
      { onEvent: this._onAnalyticsEvent },
      _react2.default.createElement(
        _wmreactAnalytics.CollectorContext,
        appContext,
        _react2.default.createElement(
          _wmreactAnalytics.ExceptionCollector,
          null,
          this.props.children
        )
      )
    );
  };

  return ElectrodeApplication;
}(_react2.default.Component); /* eslint no-undef: 0 */


ElectrodeApplication.defaultProps = {
  canary: (0, _canary2.default)()
};

ElectrodeApplication.propTypes = process.env.NODE_ENV !== "production" ? {
  children: _propTypes2.default.object,
  /**
  An optional canary object if you want to create it
  */
  canary: _propTypes2.default.object,
  /**
  Rules to send to the canary engine for processing
  */
  canaryRules: _propTypes2.default.array,
  /**
  Event handler for a canary log event
  */
  canaryLog: _propTypes2.default.func,
  /**
  Event handler for a canary message event
  */
  canaryMessage: _propTypes2.default.func,
  /**
  Any additional event processing
  */
  onAnalyticsEvent: _propTypes2.default.func
} : {};