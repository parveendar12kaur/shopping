"use strict";

/* eslint-disable no-magic-numbers */

const ElectrodeKeepAlive = require("electrode-keepalive");

// release idle keep alive sockets after 30 seconds
const freeSocketKeepAliveTimeout = 30 * 1000;

// timeout in use sockets after 1 minute, but it can be override by
// swapi's timeout (response, deadline) settings
const inUseSocketTimeout = 60 * 1000;

const getKeepAliveOpts = https => {
  return {
    https,
    keepAlive: true,
    keepAliveMsecs: 2500, // make socket send keep alive ping every 2.5 seconds
    maxSockets: 2000,
    maxFreeSockets: 256,
    freeSocketKeepAliveTimeout,
    timeout: inUseSocketTimeout
  };
};

const keepAliveInstances = {
  http: new ElectrodeKeepAlive(getKeepAliveOpts()),
  https: new ElectrodeKeepAlive(getKeepAliveOpts(true))
};

const getKeepAlive = scheme => keepAliveInstances[scheme] || keepAliveInstances.http;

const getAgent = url => getKeepAlive(url.substr(0, url.indexOf(":")).toLowerCase()).agent;

module.exports = {
  getKeepAlive,
  getAgent
};
