swagger: '2.0'
info:
  title: OneOps API
  description: WalmartLabs OneOps API
  version: 1.0.0
host: oneops.prod.walmart.com
schemes:
  - https
basePath: /

consumes:
  - "application/json"

produces:
  - "application/json"
  - "text/html"

paths:
  /account/profile/authentication_token:
    post:
      operationId: authenticationToken
      summary: 'Authenticate user and receive API token'
      description: |
        The authentication_token endpoint accepts a username and password and returns
        the API auth token
      parameters:
        - name: authInfo
          in: body
          description: user info
          required: true
          schema:
            $ref: '#/definitions/AuthInfo'
      responses:
        '200':
          description: 'Auth token'
          schema:
            type: object
            items:
              $ref: '#/definitions/AuthToken'

  /account/profile:
    get:
      operationId: getAccountProfile
      summary: 'Retrieve account profile'
      description: |
        Retrieve user's account profile
      security:
        - authToken: []
      tags:
        - Account
        - Profile
      responses:
        '200':
          description: 'Account profile'
          schema:
            type: object

  /{orgName}/assemblies:
    get:
      operationId: listAssemblies
      security:
        - authToken: []
      summary: |
        Retrieve all assemblies for an org
      description: |
        Retrieve all assemblies for an organization by its name
      parameters:
        - $ref: '#/parameters/orgName'
      tags:
        - Assembly
      responses:
        '200':
          description: 'List of assemblies'
          schema:
            type: object

    post:
      operationId: createAssembly
      security:
        - authToken: []
      summary: Create a new assembly
      description: Create a new assembly under an organization
      parameters:
        - $ref: '#/parameters/orgName'
        - name: assembly
          in: body
          description: assembly information
          required: true
          schema:
            $ref: '#/definitions/NewAsm'
      tags:
        - Assembly
      responses:
        '200':
          description: |
            Updated assembly info
          schema:
            type: object
        default:
          description: |
            unexpected reaponse
          schema:
            type: object

  /{orgName}/assemblies/{asmName}:
    get:
      operationId: getAssembly
      security:
        - authToken: []
      summary: Retrieve an assembly by name
      description: Retrieve information of an assembly by its name
      parameters:
        - $ref: '#/parameters/orgName'
        - $ref: '#/parameters/asmName'
      tags:
        - Assembly
      responses:
        '200':
          description: |
            assembly information


  /{orgName}/assemblies/{asmName}/design/platforms:
    post:
      operationId: createPlatform
      security:
        - authToken: []
      summary: |
        Create a new platform
      description: |
        Create a new platform in an assembly
      parameters:
        - $ref: '#/parameters/orgName'
        - $ref: '#/parameters/asmName'
        - name: platformData
          in: body
          description: |
            platform data
          required: true
          schema:
            $ref: '#/definitions/PlatformData'
      tags:
        - Design
        - Platform
      responses:
        '200':
          description: |
            platform information

  /{orgName}/assemblies/{asmName}/design/platforms/{platformName}/components:
    get:
      operationId: listComponents
      security:
        - authToken: []
      summary: 'Retrieve platform components'
      description: |
        Retrieve list of components that belong to a platform in an assembly
      parameters:
        - $ref: '#/parameters/orgName'
        - $ref: '#/parameters/asmName'
        - $ref: '#/parameters/platformName'
      tags:
        - Design
        - Platform
        - Component
      responses:
        '200':
          description: 'platform components'

    post:
      operationId: createComponent
      security:
        - authToken: []
      summary: Create component
      description: |
        Create a new component in the platform
      parameters:
        - $ref: '#/parameters/orgName'
        - $ref: '#/parameters/asmName'
        - $ref: '#/parameters/platformName'
        - name: componentData
          in: body
          description: 'Component data'
          required: true
          schema:
            $ref: '#/definitions/ComponentData'
      tags:
        - Design
        - Platform
        - Component
      responses:
        '200':
          description: 'create component response'

  /{orgName}/assemblies/{asmName}/design/platforms/{platformName}/components/{componentId}:
    put:
      operationId: updateComponent
      security:
        - authToken: []
      summary: 'Update existing component'
      description: |
        Update an existing component component
      parameters:
        - $ref: '#/parameters/orgName'
        - $ref: '#/parameters/asmName'
        - $ref: '#/parameters/platformName'
        - name: componentId
          in: path
          description: |
            component ID retrieve with the components endpoint
          required: true
          type: string
        - name: componentData
          in: body
          description: 'component data'
          required: true
          schema:
            $ref: '#/definitions/ComponentData'
      tags:
        - Design
        - Platform
        - Component
        - Compute
      responses:
        '200':
          description: 'update data'



definitions:
  AuthInfo:
    type: object
    required: [ "user" ]
    properties:
      user:
        type: object
        required: [ "username", "password" ]
        properties:
          username:
            type: string
            description: 'username'
          password:
            type: string
            description: 'password'

  AuthToken:
    type: object
    properties:
      token:
        type: string
        description: 'API auth token'

  NewAsm:
    type: object
    required: [ "cms_ci" ]
    properties:
      cms_ci:
        type: object
        required: [ "ciName", "ciAttributes" ]
        properties:
          comments:
            type: string
            description: 'comments'
          ciName:
            type: string
            description: 'assembly name'
          ciAttributes:
            type: object
            required: [ "owner" ]
            properties:
              owner:
                type: string
                description: 'email address'
              description:
                type: string
                description: 'description'

  PlatformData:
    type: object
    required: [ "cms_dj_ci" ]
    properties:
      cms_dj_ci:
        type: object
        required: [ "ciName", "ciAttributes" ]
        properties:
          comments:
            type: string
            description: 'comments'
          ciName:
            type: string
            description: 'platform name'
          ciAttributes:
            type: object
            properties:
              source:
                type: string
                description: 'pack source - ie. `main`'
              description:
                type: string
                description: 'description'
              major_version:
                type: string
                description: 'OneOps pack major version - ie. 1'
              pack:
                type: string
                description: 'OneOps pack - ie. `customlb`'
              version:
                type: string
                description: 'OneOps pack version - ie. `2`'

  ComputeAttr:
    type: object
    properties:
      size:
        type: string
        description: 'compute size - S, M, L, XL'
        default: M
        enum:
        - S
        - M
        - L
        - XL

  UserAttr:
    type: object
    properties:
      username:
        type: string
        description: username
      system_account:
        type: boolean
        description:  whether user should be system account
      description:
        type: string
        description: description
      login_shell:
        type: string
        description: |
          user login shell - ie `/bin/bash`
      home_directory:
        type: string
        description: |
          user home directory - ie `/home/app`
      authorized_keys:
        type: string
        description: |
          a string that's a valid JSON of an array of strings
      ulimit:
        type: number
        description: |
          ulimit value - ie 16384
      sudoer:
        type: boolean
        description: |
          whether user can run sudo

  VolumeAttr:
    type: object
    properties:
      size:
        type: string
        description: 'Volume size - `100%FREE`'
        default: '100%FREE'
      mount_point:
        type: string
        description: 'Volume mount point - `/app`'
      fstype:
        type: string
        description: 'File system type'
        default: 'ext4'
        enum:
        - ext3
        - ext4

  ArtifactAttr:
    type: object
    description: Attributes for a Nexus Artifact component
    properties:
      version:
        type: string
        description: Artifact version
      checksum:
        type: string
        description: Artifact SHA checksum
      install_dir:
        type: string
        description: Directory to install the artifact
      as_user:
        type: string
        description: user to install the artifact as
        default: root
      as_group:
        type: string
        description: user group to install the artifact as
        default: root
      url:
        type: string
        description: URL to the nexus repo
      repository:
        type: string
        description: name of the nexus repo
      location:
        type: string
        description: location of the artifact - `<groupId>:<artifactName>:tgz`
      path:
        type: string
        description: path to the nexus repo
      username:
        type: string
        description: Username use for the nexus repo
      should_expand:
        type: boolean
        description: do you want the artifact to be expanded to `install_dir`

  BuildAttr:
    type: object
    description: Attributes for a Build component
    properties:
      install_dir:
        type: string
        description: Directory to install the source for build
      scm:
        type: string
        description: SCM type to retrieve the source
        default: git
        enum:
        - git
        - svn
      repository:
        type: string
        description: URL to the source repo
      revision:
        type: string
        description: branch/revision tag to retrieve the source
      username:
        type: string
        description: username for the SVN
      password:
        type: string
        description: password for the SVN
      as_user:
        type: string
        description: user to install the build source as
      as_group:
        type: string
        description: group to install the build source as



  ComponentData:
    type: object
    discriminator: "template_name"
    required: [ "cms_dj_ci", "template_name" ]
    properties:
      template_name:
        type: string
        description: name of the component template to use
        default: build
        enum:
        - build
        - artifact
        - user
        - volume
        - compute
      sibling_depends_on:
        type: string
        description: an array of names of components of the same type this component depends on
      cms_dj_ci:
        type: object
        required: [ "ciAttributes" ]
        properties:
          ciName:
            type: string
            description: 'component name'
          ciClassName:
            type: string
            default: catalog.Build
            description: catalog name
            enum:
            - catalog.Build
            - catalog.Artifact
            - catalog.User
            - catalog.Volume
            - catalog.Compute
          ciAttributes:
            type: object


  user:
    type: object
    allOf:
      - $ref: '#/definitions/ComponentData'
      - type: object
        properties:
          cms_dj_ci:
            type: object
            properties:
              ciAttributes:
                $ref: '#/definitions/UserAttr'

  compute:
    type: object
    allOf:
      - $ref: '#/definitions/ComponentData'
      - type: object
        properties:
          cms_dj_ci:
            type: object
            properties:
              ciAttributes:
                $ref: '#/definitions/ComputeAttr'

  volume:
    type: object
    allOf:
      - $ref: '#/definitions/ComponentData'
      - type: object
        properties:
          cms_dj_ci:
            type: object
            properties:
              ciAttributes:
                $ref: '#/definitions/VolumeAttr'

  artifact:
    type: object
    allOf:
      - $ref: '#/definitions/ComponentData'
      - type: object
        properties:
          cms_dj_ci:
            type: object
            properties:
              ciAttributes:
                $ref: '#/definitions/ArtifactAttr'

  build:
    type: object
    allOf:
      - $ref: '#/definitions/ComponentData'
      - type: object
        properties:
          cms_dj_ci:
            type: object
            properties:
              ciAttributes:
                $ref: '#/definitions/BuildAttr'

securityDefinitions:

  authToken:
    type: basic
    description: |
      HTTP Basic Authentication using OneOps API token returned by `authentication_token` endpoint

parameters:
  orgName:
    name: orgName
    in: path
    description: |
      organization name retrieved from account profile
    required: true
    type: string

  asmName:
    name: asmName
    in: path
    description: |
      assembly name
    required: true
    type: string

  platformName:
    name: platformName
    in: path
    description: |
      platform name
    required: true
    type: string

