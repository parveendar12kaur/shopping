/* eslint-disable strict, prefer-template */
"use strict";

const ElectrodeSwapi = require("../../lib/electrode-swapi.js");
const Path = require("path");

class ApiKeyClient extends ElectrodeSwapi {
  constructor(config, swagger, providerName) {
    super(config, swagger, providerName);
  }

  static create(config, specOverride, providerName) {
    return ElectrodeSwapi.createSwagger({
      config,
      Client: ApiKeyClient,
      providerName: providerName || ApiKeyClient.providerName,
      specOverride
    }).then(swagger => new ApiKeyClient(config, swagger, providerName));
  }

  static get specFilename() {
    return Path.join(__dirname, "../data/api_key.yaml");
  }

  static get providerName() {
    return "apiKey";
  }

  static get serviceRegistry() {
    return {
      qa: {
        ENDPOINT: {
          host: "api-key.client.host"
        }
      }
    };
  }

  static get signHeadersList() {
    const wm = ElectrodeSwapi.WM_HEADERS;
    return [wm.consumerId, wm.consumerIp].sort();
  }
}

module.exports = ApiKeyClient;
