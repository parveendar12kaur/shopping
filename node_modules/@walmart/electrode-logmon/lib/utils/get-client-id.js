"use strict";

const _ = require("lodash");
const async = require("async");
const request = require("request");
const util = require("util");

const HEX_REGEXP = /^(?:0x)?[0-9a-fA-F]+$/;

let clientId = null;
let queue = null;

// Only meant to be used via logmon client, which provides the options
// object with defaults set

module.exports = (options, callback) => {

  if (clientId !== null) {
    return callback(null, clientId);
  }

  const worker = (outerCallback, next) => {
    const onDone = (error, result) => {
      clientId = result;
      outerCallback(error, clientId);
      next(error);
    };

    if (clientId !== null) {
      return onDone(null, clientId);
    }

    const url = util.format(
      "%slms/api/dlist/cid/%s/%s/%s/%s/%s/%s",
      options.baseUrl,
      encodeURIComponent(options.environment),
      encodeURIComponent(options.dataCenter),
      encodeURIComponent(options.host),
      encodeURIComponent(options.groupId),
      encodeURIComponent(options.buildId),
      encodeURIComponent(options.instanceName)
    );

    const requestOptions = {
      url: url,
      json: true
    };

    const onRequest = (error, response, body) => {

      if (error || response.statusCode !== 200 || !HEX_REGEXP.test(body.payload)) {
        return onDone(null, _.random(1, 0xFFFFFFFF));
      }

      onDone(null, parseInt(body.payload, 16));
    };

    request.get(requestOptions, onRequest);
  };

  if (queue === null) {
    queue = async.queue(worker, 1);
  }

  queue.push(callback);
};
