"use strict";

const EventEmitter = require("events").EventEmitter;

const _ = require("lodash");
const assert = require("assert");

const FileWriter = require("./file-writer");
const KafkaWriter = require("./kafka-writer");

const MODES = {
  FILE: 1,
  KAFKA: 2,
  DUAL: 3
};

const internals = {};

internals.DEFAULT_OPTIONS = {
  mode: MODES.DUAL
};

class DualWriter extends EventEmitter {

  constructor(options) {
    super();
    if (options && options.hasOwnProperty("mode")) {
      const errMsg = "mode must be an integer between 1 and 3";
      assert(_.isInteger(options.mode), errMsg);
      assert(options.mode > 0 && options.mode < 4, errMsg);
    }
    this._options = _.defaults({}, options, internals.DEFAULT_OPTIONS);
    this._createWriters();
  }

  _createWriters() {
    if (this._options.mode === MODES.DUAL || this._options.mode === MODES.FILE) {
      this._fileWriter = new FileWriter(this._options);
      this._fileWriter.on("error", this._propagateError.bind(this));
    }
    if (this._options.mode === MODES.DUAL || this._options.mode === MODES.KAFKA) {
      this._kafkaWriter = new KafkaWriter(this._options);
      this._kafkaWriter.on("error", this._propagateError.bind(this));
    }
  }

  _propagateError(err) {
    this.emit("error", err);
  }

  write(message) {
    if (this._fileWriter) {
      this._fileWriter.write(message);
    }
    if (this._kafkaWriter) {
      this._kafkaWriter.write(message);
    }
  }

  closeKafka() {
    if (this._kafkaWriter) {
      this._kafkaWriter.closeClient();
    }
  }
}


module.exports = DualWriter;
