inherit: "job://otto_component-looper-flows"

tools:
  nodejs:
    - 8.9.4
  npm:
    - 5.6.0

triggers:
  - push:
      # ensure that npm version commit does not trigger another build
      # by ignoring message used in publish flow below
      ignoreMessage:
        - "*"
  - manual: Run default
  - manual:
      name: Publish Major Version Release
      call: publish(versiontype='major')
  - manual:
      name: Publish Minor Version Release
      call: publish(versiontype='minor')
  - manual:
      name: Publish Patch Version Release
      call: publish(versiontype='patch')
  - manual:
      name: Publish Beta Major Version Release
      call: publish_as_beta(versiontype='major')
  - manual:
      name: Publish Beta Minor Version Release
      call: publish_as_beta(versiontype='minor')
  - manual:
      name: Publish Beta Patch Version Release
      call: publish_as_beta(versiontype='patch')
  - manual:
      name: Publish Legacy Minor 5.x.x Version
      call: publish_as_legacy(versiontype='minor')
  - manual:
      name: Publish Legacy Patch 5.x.x Version
      call: publish_as_legacy(versiontype='patch')

flows:
  # default flow is run for each commit, add whatever you want to happen then
  default:
  - npm config ls -l
  - npm install

  publish:
  - call: default
  - git checkout package-lock.json && git status && git diff
  - npm version $versiontype -m 'Release %s'
  - git status && git diff
  - exposeVars(package.json)
  - echo "Publishing ${package.version}"
  - git status && git push origin --tags && git push origin master && npm publish

  publish_as_beta:
  - call: default
  - git checkout package-lock.json && git status && git diff
  - npm version $versiontype -m 'Release %s as beta'
  - git status && git diff
  - exposeVars(package.json)
  - echo "Publishing ${package.version}"
  - git status && git push origin --tags && git push origin master && npm publish --tag beta

  publish_as_legacy:
  - git checkout -t -b 5.x.x origin/5.x.x
  - call: default
  - git checkout package-lock.json && git status && git diff
  - npm version $versiontype -m 'Release %s as legacy 5.x.x'
  - git status && git diff
  - exposeVars(package.json)
  - echo "Publishing ${package.version}"
  - git status && git push origin 5.x.x --tags && git push origin 5.x.x && npm publish --tag legacy

  setup:
    - shell (name install): |
        npm install
  lint:
    - shell (name lint): |
        npm run lint
  unit_test:
    - shell (name unit_test): |
        npm run test
  pr:
    - call: setup
    - call: lint
    - call: unit_test
    - call: component_test
