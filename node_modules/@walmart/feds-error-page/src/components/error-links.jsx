import React from "react";
import PropTypes from "prop-types";

import { getDataAutomationIdPair } from "../utils/automation-id";
import STATUS_CODES from "../enums/status-codes";

const _renderReloadLink = ({ onClick, dataAutomationId }) => {
  const Link = onClick ? "span" : "a";
  const linkProps = onClick ? { onClick } : { href: "" };

  return (
    <Link
      id="retry-link"
      className="error-page__link"
      {...linkProps}
      {...getDataAutomationIdPair("reload", dataAutomationId)}
    >
      Try again
    </Link>
  );
};

const _renderSeparator = is500 => {
  return is500 ? " or go back to " : "Go to ";
};

const ErrorLinks = props => {
  const { statusCode, suppressHomeLink, dataAutomationId } = props;
  const IS_500 = statusCode === STATUS_CODES["500"];

  return (
    <div className="error-page__links">
      {IS_500 && _renderReloadLink(props)}
      {!suppressHomeLink && _renderSeparator(IS_500)}
      {!suppressHomeLink && (
        <a
          className="error-page__link"
          href="/"
          {...getDataAutomationIdPair("home", dataAutomationId)}
        >
          Walmart.com
        </a>
      )}
      {!suppressHomeLink && "."}
    </div>
  );
};

ErrorLinks.displayName = "ErrorLinks";

ErrorLinks.propTypes = {
  dataAutomationId: PropTypes.string,
  onClick: PropTypes.func,
  statusCode: PropTypes.number.isRequired,
  suppressHomeLink: PropTypes.bool
};

ErrorLinks.defaultProps = {
  dataAutomationId: "error-ErrorPage-link",
  suppressHomeLink: false
};

export default ErrorLinks;
