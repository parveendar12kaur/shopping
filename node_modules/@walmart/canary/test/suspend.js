/* eslint-disable func-names */
var test = require('tape');
var sinon = require('sinon');
var createCanary = require('..');

test('canary can be suspended', function (t) {
    t.plan(3);

    var canary = createCanary();
    sinon.stub(canary.event, 'produce');
    canary.suspend();
    t.ok(canary.isSuspended(), 'isSuspended');

    canary.process(1);
    canary.process(2);
    canary.process(3);
    canary.process(4);
    t.ok(!canary.event.produce.called, 'no events produced');
    canary.resume();
    t.equal(canary.event.produce.callCount, 4, 'events drained after resume');
});

test('canary adheres to buffer length limit', function (t) {
    t.plan(3);

    var canary = createCanary({ processBufferMax: 2 });
    sinon.stub(canary.event, 'produce');
    canary.suspend();

    canary.process(1);
    canary.process(2);
    canary.process(3);
    canary.process(4);
    canary.resume();
    t.equal(canary.event.produce.callCount, 2, '2 events drained after resume');
    t.ok(canary.event.produce.calledWithMatch({ payload: 3 }), '3 produced');
    t.ok(canary.event.produce.calledWithMatch({ payload: 4 }), '4 produced');
});
