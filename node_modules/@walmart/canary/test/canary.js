/* eslint-disable func-names */
var test = require('tape');
var sinon = require('sinon');
var createCanary = require('..');

test('anivia canary process', function (t) {
    var canary = createCanary({ suspend: false });
    sinon.stub(canary.event, 'produce');

    canary.process('i-made-this-up');
    t.ok(canary.event.produce.calledWithMatch({ payload: 'i-made-this-up' }), 'should pass along any event');

    canary.process({ hello: 'world' });
    t.ok(canary.event.produce.calledWithMatch({ payload: { hello: 'world' } }), 'should pass along any event');

    canary.event.produce.restore();

    t.end();
});

test('canary dispatch', function (t) {
    var canary = createCanary();
    t.plan(1);
    canary.message(function (payload) {
        t.equal(payload.hello, 'world', 'should produce message');
    });
    canary.dispatch({hello: 'world'});
});
