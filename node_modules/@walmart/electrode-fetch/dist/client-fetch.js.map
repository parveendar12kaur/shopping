{"version":3,"sources":["../src/client-fetch.js"],"names":["require","ElectrodeFetch","instance","manageJwt","keepAlive","fetch","self","bind","isClientFetch","getGlobalJWT","window","_wml","jwt","module","exports","fetchJSON","setListener","setFetch","setGenerateCorrelationID","setGetJWT"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;;AACAA,QAAQ,cAAR;;AAEA,IAAMC,iBAAiBD,QAAQ,mBAAR,CAAvB;;AAEA,IAAME,WAAW,IAAID,cAAJ,CAAmB;AAClCE,aAAW,IADuB;AAElCC,aAAW,KAFuB;AAGlCC,SAAOC,KAAKD,KAAL,CAAWE,IAAX,CAAgBD,IAAhB,CAH2B;AAIlCE,iBAAe,IAJmB;AAKlCC,gBAAc;AAAA,WAAMC,OAAOC,IAAP,GAAcD,OAAOC,IAAP,CAAYC,GAA1B,GAAgC,IAAtC;AAAA;AALoB,CAAnB,CAAjB;;AAQAC,OAAOC,OAAP,GAAiB;AACfZ,YAAUA,QADK;AAEfG,SAAOH,SAASG,KAAT,CAAeE,IAAf,CAAoBL,QAApB,CAFQ;AAGfa,aAAWb,SAASa,SAAT,CAAmBR,IAAnB,CAAwBL,QAAxB,CAHI;AAIfc,eAAad,SAASc,WAAT,CAAqBT,IAArB,CAA0BL,QAA1B,CAJE;AAKfe,YAAUf,SAASe,QAAT,CAAkBV,IAAlB,CAAuBL,QAAvB,CALK;AAMfgB,4BAA0BhB,SAASgB,wBAAT,CAAkCX,IAAlC,CAAuCL,QAAvC,CANX;AAOfiB,aAAWjB,SAASiB,SAAT,CAAmBZ,IAAnB,CAAwBL,QAAxB;AAPI,CAAjB","file":"client-fetch.js","sourcesContent":["\"use strict\";\n\n/* global window, self */\n\n// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire(\"whatwg-fetch\");\n\nconst ElectrodeFetch = require(\"./electrode-fetch\");\n\nconst instance = new ElectrodeFetch({\n  manageJwt: true,\n  keepAlive: false,\n  fetch: self.fetch.bind(self),\n  isClientFetch: true,\n  getGlobalJWT: () => window._wml ? window._wml.jwt : null\n});\n\nmodule.exports = {\n  instance: instance,\n  fetch: instance.fetch.bind(instance),\n  fetchJSON: instance.fetchJSON.bind(instance),\n  setListener: instance.setListener.bind(instance),\n  setFetch: instance.setFetch.bind(instance),\n  setGenerateCorrelationID: instance.setGenerateCorrelationID.bind(instance),\n  setGetJWT: instance.setGetJWT.bind(instance)\n};\n"]}