{"version":3,"sources":["../src/electrode-fetch.js"],"names":["responseError","message","response","e","Error","status","translateResponse","request","fail","exception","url","data","translate","catch","noOp","logFetchEnd","level","timingFirst","timings","timing","lastTiming","endTime","end","getTime","logger","state","msg","index","receiveTime","received","start","translateTime","translated","time","totalTime","retry","maxRetries","options","ElectrodeFetch","JWT","_requestIndex","setListener","setFetch","setGenerateCorrelationID","setGetJWT","jsonTranslate","resp","json","_translate","prototype","fetchWrapper","self","timeout","fetch","fetchTimeout","isClientFetch","Promise","resolve","reject","_fetch","then","setTimeout","clearTimeout","x","manageJwt","headers","newJwt","get","undefined","noRetry","push","fetchGetTime","Date","makeRequest","now","disableAnalytics","_listener","startTime","length","credentials","omitCorrelationId","_generateCorrelationID","omitCsrfJwt","jwt","_getGlobalJWT","agent","fetchJSON","omitContentType","listener","newFetch","generator","generateCorrelationID","getter","getGlobalJWT","module","exports"],"mappings":"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","file":"electrode-fetch.js","sourcesContent":["\"use strict\";\n\n/* eslint-disable no-magic-numbers, prefer-template */\n\nfunction responseError(message, response) {\n  const e = new Error(message);\n  e.response = response;\n  e.status = response.status;\n  return e;\n}\n\nfunction translateResponse(request, response) {\n  function fail(exception) {\n    throw responseError(`electrode-fetch: payload from URL ${request.url} ` +\n      `caused translate exception: ${exception.message}`,\n      response\n    );\n  }\n\n  try {\n    let data = request.translate(response);\n    if (data.catch) {\n      data = data.catch(fail);\n    }\n    return data;\n  } catch (exception) {\n    return fail(exception);\n  }\n}\n\nfunction noOp() {\n}\n\n/*\n * To be attached to request, expected called with request as this.\n */\n\n/* eslint-disable no-invalid-this */\n\nfunction logFetchEnd(level, data) {\n  const request = data.request;\n  const timingFirst = request.timings[0];\n  const timing = request.lastTiming();\n  request.endTime = timing.end = request.getTime();\n\n  this.logger(level,\n    {\n      state: data.state || \"end\",\n      msg: data.msg,\n      index: this.index,\n      url: this.url,\n      receiveTime: timing.received - timing.start,\n      translateTime: timing.translated - timing.received,\n      time: timing.end - timing.start,\n      totalTime: timing.end - timingFirst.start,\n      retry: this.retry,\n      maxRetries: this.options.maxRetries,\n      status: data.status\n    },\n    {\n      request: request,\n      response: data.response\n    });\n}\n\n/*\n *  options:\n *\n *   options.manageJwt - boolean\n *\n *     If true, will look for x-csrf-jwt header from response and take\n *     it on as the new JWT token to be used in all subsequent fetches\n *\n *   options.keepAlive - boolean\n *\n *     If true, will try to keep HTTP connection alive (only works for server side)\n */\nfunction ElectrodeFetch(options) {\n  this.options = options;\n\n  // JWT token to be used in all fetches\n  // could be set if manageJwt is true and a fetch returned the token in\n  // the header x-csrf-jwt\n  this.JWT = false;\n\n  this._requestIndex = 0;\n\n  this.setListener();\n  this.setFetch();\n  this.setGenerateCorrelationID();\n  this.setGetJWT();\n\n  function jsonTranslate(resp) {\n    return resp.json();\n  }\n\n  this._translate = options.translate || jsonTranslate;\n}\n\nElectrodeFetch.prototype.fetchWrapper = function (request) {\n  const self = this;\n  const timeout = request.options.timeout;\n  let fetch;\n  let fetchTimeout;\n\n  if (this.options.isClientFetch && timeout) {\n    fetch = new Promise((resolve, reject) => {\n      request._fetch(request.url, request.options)\n        .then(resolve)\n        .catch(reject);\n\n      fetchTimeout = setTimeout(() => {\n        resolve({\n          status: 408,\n          message: \"request timed out\"\n        });\n      }, timeout);\n    });\n  } else {\n    fetch = request._fetch(request.url, request.options);\n  }\n\n  return fetch.then((response) => { // eslint-disable-line max-statements\n    clearTimeout(fetchTimeout);\n    const timing = request.lastTiming();\n    timing.received = request.getTime();\n\n    function translated(x) {\n      timing.translated = request.getTime();\n      return x;\n    }\n\n    if (self.options.manageJwt && response.headers) {\n      const newJwt = response.headers.get(\"x-csrf-jwt\");\n      if (newJwt !== undefined && newJwt !== null) {\n        self.JWT = newJwt;\n      }\n    }\n\n    if (response.status >= 200 && response.status < 300) { // eslint-disable-line\n      const data = translateResponse(request, response);\n\n      return data.then ? data.then(translated) : translated(data);\n\n    } else if (!request.options.noRetry && ((response.status === 401 && request.retry < 1) || // eslint-disable-line\n      (request.options.maxRetries > 0 && request.retry < request.options.maxRetries))) {\n      if (response.status === 401) { // eslint-disable-line\n        request.options.headers[\"x-csrf-jwt\"] = response.headers.get(\"x-csrf-jwt\");\n      }\n\n      request.logFetchEnd(\"warn\", {\n        state: \"retry\", status: response.status,\n        request: request, response: response\n      });\n\n      request.retry++;\n      request.timings.push({start: request.getTime()});\n      return self.fetchWrapper(request);\n\n    } else {\n      throw responseError(\n        `electrode-fetch: URL \"${request.url}\" returned bad status ${response.status}`,\n        response\n      );\n    }\n  });\n\n};\n\nfunction fetchGetTime() {\n  return new Date().getTime();\n}\n\nElectrodeFetch.prototype.makeRequest = function (url, options, translate) {\n  const getTime = options.getTime || fetchGetTime;\n  const index = this._requestIndex++;\n  const now = getTime();\n\n  return {\n    url: url,\n    options: options,\n    retry: 0,\n    index: index,\n    translate: translate || this._translate,\n    logFetchEnd: logFetchEnd,\n    logger: options.disableAnalytics ? noOp : this._listener,\n    getTime: getTime,\n    startTime: now,\n    timings: [{start: now}],\n    lastTiming: function () {\n      return this.timings[this.timings.length - 1];\n    }\n  };\n};\n\nElectrodeFetch.prototype.fetch = function (url, options, translate) { // eslint-disable-line max-statements, max-len\n\n  options = options || {};\n\n  if (options.credentials === undefined) {\n    options.credentials = \"same-origin\";\n  }\n\n  if (options.headers === undefined) {\n    options.headers = {};\n  }\n\n  if (!options.omitCorrelationId &&\n      !options.headers[\"WM_QOS.CORRELATION_ID\"] &&\n      this._generateCorrelationID) {\n    options.headers[\"WM_QOS.CORRELATION_ID\"] = this._generateCorrelationID(url, options);\n  }\n\n  if (!options.omitCsrfJwt && !options.headers[\"x-csrf-jwt\"]) {\n    const jwt = this.JWT || this._getGlobalJWT();\n    if (jwt) {\n      options.headers[\"x-csrf-jwt\"] = jwt;\n    }\n  }\n\n  if (options.agent) {\n    options.headers[\"Connection\"] = \"keep-alive\"; // eslint-disable-line\n  }\n\n  const request = this.makeRequest(url, options, translate);\n\n  request.logger(\"info\",\n    {state: \"start\", msg: \"start\", index: request.index, url: request.url}, {request: request});\n\n  request._fetch = options._fetch || this._fetch;\n\n  return this.fetchWrapper(request)\n    .then((response) => {\n      request.logFetchEnd(\"info\", {\n        status: response.status,\n        request: request,\n        response: response\n      });\n      return response;\n    })\n    .catch((exception) => {\n      request.logFetchEnd(\"error\", {\n        state: \"failed\",\n        msg: `fetch_fail - ${exception.message}`,\n        status: exception.status,\n        request: request,\n        response: exception.response\n      });\n      throw exception;\n    });\n};\n\nElectrodeFetch.prototype.fetchJSON = function (url, options) {\n  options = options || {};\n\n  if (options.headers === undefined) {\n    options.headers = {};\n  }\n\n  if (!options.omitContentType && options.headers[\"Content-Type\"] === undefined) {\n    options.headers[\"Content-Type\"] = \"application/json\";\n  }\n\n  return this.fetch(url, options);\n};\n\nElectrodeFetch.prototype.setListener = function (listener) {\n  this._listener = listener || this.options.listener || noOp;\n};\n\nElectrodeFetch.prototype.setFetch = function (newFetch) {\n  this._fetch = newFetch || this.options.fetch;\n};\n\nElectrodeFetch.prototype.setGenerateCorrelationID = function (generator) {\n  this._generateCorrelationID = generator || this.options.generateCorrelationID;\n};\n\nElectrodeFetch.prototype.setGetJWT = function (getter) {\n  this._getGlobalJWT = getter || this.options.getGlobalJWT || noOp;\n};\n\nmodule.exports = ElectrodeFetch;\n"]}