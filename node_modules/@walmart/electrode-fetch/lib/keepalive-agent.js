"use strict";

/* eslint-disable no-magic-numbers */

const ElectrodeKeepAlive = require("electrode-keepalive");

// release idle keep alive sockets after 30 seconds
const freeSocketKeepAliveTimeout = 30 * 1000;

// timeout in use sockets after 1 minute, but it can be override by
// electrode-fetch's timeout option if it's specified.
const inUseSocketTimeout = 60 * 1000;

const getKeepAliveOpts = https => {
  return {
    https,
    keepAlive: true,
    keepAliveMsecs: 2500, // make socket send keep alive ping every 2.5 seconds
    maxSockets: 2000,
    maxFreeSockets: 256,
    freeSocketKeepAliveTimeout,
    timeout: inUseSocketTimeout
  };
};
const httpKeepAlive = new ElectrodeKeepAlive(getKeepAliveOpts());
const httpsKeepAlive = new ElectrodeKeepAlive(getKeepAliveOpts(true));

const httpAgent = httpKeepAlive.agent;
const httpsAgent = httpsKeepAlive.agent;

module.exports = {
  httpKeepAlive,
  httpsKeepAlive,
  httpAgent,
  httpsAgent
};
