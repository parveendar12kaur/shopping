"use strict";

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _groupScripts = require("../group-scripts");

var _groupScripts2 = _interopRequireDefault(_groupScripts);

var _scriptLoader = require("../utils/script-loader");

var _scriptLoader2 = _interopRequireDefault(_scriptLoader);

var _torbit = require("../utils/torbit");

var _torbit2 = _interopRequireDefault(_torbit);

var _chunk = require("lodash/chunk");

var _chunk2 = _interopRequireDefault(_chunk);

var _electrodeCookies = require("@walmart/electrode-cookies");

var _electrodeCookies2 = _interopRequireDefault(_electrodeCookies);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*eslint max-len:[2,120,2]*/
/**
 * Server-side template
 * --------------------
 *
 * **Note**: We lint this as client code but import it only into node-land.
 */


// A naive whitespace stripper to help with ES6 strings.
var strip = function strip(text) {
  return text.replace(/^\s*|\s*$/gm, "");
};

var dynamicDataLoaderSrc = _scriptLoader2.default.loadDynamicDataLoader();
var defaultCdnHost = "i5.walmartimages.com";
// An empty script act as a dummy to trick torbit to rewrite the URL so we can
// look it up and extract the rewritten host name.  It will have the async attr.
var dummyScript = "//" + defaultCdnHost + "/dfw/63fd9f59-c534/7237d572-0c98-4eab-974b-3b694e72f5ba/v1/ft.js";

var _wmlInitScripts = ["window._wml = {defaultCdnHost: \"" + defaultCdnHost + "\"};"];

/*
 * This is the version that load the dynamic data from the application/json
 * tag to be PCI compliant.  The other version is below in _dynamicDataScript
 */
var wmlDataResolver = strip("(function () {\n  var data = window._Dyn.create(\"#tb-djs-wml-data\");\n  _wml.config = {ccm: data.get(\"ccm\"), ui: data.get(\"uiConfig\"), expoCookies: data.get(\"expoCookies\")};\n  _wml.correlationId = data.get(\"correlationId\");\n  _wml.jwt = data.get(\"jwt\");\n  _wml.envInfo = data.get(\"envInfo\");\n  window._exp = data.get(\"expData\");\n})();");

var Index = function (_Component) {
  _inherits(Index, _Component);

  function Index() {
    _classCallCheck(this, Index);

    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  Index.prototype._getExpoCookies = function _getExpoCookies() {
    var _props = this.props,
        expoPrefix = _props.expoPrefix,
        request = _props.request;


    return expoPrefix ? _electrodeCookies2.default.get(expoPrefix, { matchSubStr: true, request: request }) : {};
  };

  Index.prototype._injectDynamicData = function _injectDynamicData(data) {
    var noPciCompliance = this.props.noPciCompliance;


    if (!data || noPciCompliance) {
      return null;
    }

    var __html = _torbit2.default.replaceUrls(JSON.stringify(data));

    return _react2.default.createElement("script", { id: "tb-djs-wml-data", type: "application/json", dangerouslySetInnerHTML: { __html: __html } });
  };

  Index.prototype._dynamicDataScript = function _dynamicDataScript() {
    /*
     * This is the version that embed the dynamic data in the JS directly.
     */
    var _props2 = this.props,
        ccm = _props2.ccm,
        jwt = _props2.jwt,
        correlationId = _props2.correlationId,
        uiConfig = _props2.uiConfig,
        envInfo = _props2.envInfo;

    var jwtScr = jwt ? "_wml.jwt = \"" + jwt + "\";" : "";
    var expoCookies = this._getExpoCookies();
    return "_wml.config = {\n  ccm: " + JSON.stringify(ccm) + ",\n  ui: " + JSON.stringify(uiConfig) + ",\n  expoCookies: " + JSON.stringify(expoCookies) + "\n};\n_wml.correlationId = \"" + correlationId + "\";\n_wml.envInfo = " + JSON.stringify(envInfo) + ";\n" + jwtScr;
  };

  Index.prototype._injectScripts = function _injectScripts(scripts) {
    return scripts.map(function (scripts, i) {
      return typeof scripts === "string" ? _react2.default.createElement("script", { key: i, dangerouslySetInnerHTML: { __html: scripts } }) : scripts.map(function (scr, ii) {
        return _react2.default.createElement("script", _extends({ key: ii }, scr));
      });
    });
  };

  Index.prototype._injectDllBundles = function _injectDllBundles() {
    var bundles = this.props.bundles;


    var dllBundles = bundles.jsDll;

    return dllBundles && dllBundles.length ? dllBundles.map(function (bundle) {
      return _react2.default.createElement("script", { key: bundle, src: bundle });
    }) : null;
  };

  Index.prototype._injectIconStats = function _injectIconStats() {
    var iconStats = this.props.iconStats;


    if (!iconStats) {
      return null;
    }

    var linkPattern = /(link) (\w+)="(.*)" (\w+)="(.*)" (\w+)="(.*)"/;
    var metaPattern = /(meta) (\w+)="(.*)" (\w+)="(.*)"/;

    return iconStats.map(function (html, i) {
      var match = html.match(linkPattern) || html.match(metaPattern);

      if (!match) {
        return null;
      }

      var iconProps = (0, _chunk2.default)(match.slice(2), 2).reduce(function (props, v) {
        props[v[0]] = v[1];

        return props;
      }, { key: i });

      return (0, _react.createElement)(match[1], iconProps);
    });
  };

  Index.prototype._injectCriticalCSS = function _injectCriticalCSS() {
    var criticalCSS = this.props.criticalCSS;

    return criticalCSS ? _react2.default.createElement("style", { dangerouslySetInnerHTML: { __html: criticalCSS } }) : null;
  };

  Index.prototype.render = function render() {
    var _props3 = this.props,
        ccm = _props3.ccm,
        jwt = _props3.jwt,
        correlationId = _props3.correlationId,
        uiConfig = _props3.uiConfig,
        noPciCompliance = _props3.noPciCompliance,
        envInfo = _props3.envInfo,
        metaTags = _props3.metaTags,
        isMobile = _props3.isMobile,
        pwaManifest = _props3.pwaManifest,
        request = _props3.request,
        dnsPrefetch = _props3.dnsPrefetch,
        preconnect = _props3.preconnect,
        unbundledStyle = _props3.unbundledStyle,
        bundles = _props3.bundles,
        excludeTorbitContentCheck = _props3.excludeTorbitContentCheck,
        content = _props3.content,
        render = _props3.render,
        bundleProps = _props3.bundleProps,
        bodyBundleInHeader = _props3.bodyBundleInHeader;


    var isNewFont = _electrodeCookies2.default.get("NewFont") === "1";

    var fontURL = isNewFont ? "//" + defaultCdnHost + "/dfw/63fd9f59-7a1b/1399b31b-559f-4202-b08a-1e41342cedba/v1/BogleWeb_subset.css" : "//" + defaultCdnHost + "/dfw/63fd9f59-6ace/57132652-ed71-42ee-9bc8-c256b0073184/v1/BogleWeb.css";

    var scripts = [_scriptLoader2.default.loadLittleLoader(), noPciCompliance ? "" : dynamicDataLoaderSrc, noPciCompliance ? "" : wmlDataResolver, noPciCompliance ? this._dynamicDataScript() : ""].concat(this.props.unbundledJS.enterHead);

    var initScripts = (0, _groupScripts2.default)(scripts);

    var firstScripts = (0, _groupScripts2.default)(this.props.unbundledJS.firstScripts || []);
    var preBundleScripts = (0, _groupScripts2.default)(this.props.unbundledJS.preBundle || []);
    var postBundleScripts = (0, _groupScripts2.default)(this.props.unbundledJS.postBundle || []);

    var expoCookies = this._getExpoCookies();

    return (
      // Unfortunately, no easy way to do: `<!DOCTYPE html>` within a render,
      // so have to manually do it outside in the server after render to string.
      _react2.default.createElement(
        "html",
        { lang: "en" },
        _react2.default.createElement(
          "head",
          null,
          dnsPrefetch && dnsPrefetch.map(function (url, i) {
            return _react2.default.createElement("link", { key: i, rel: "dns-prefetch", href: url });
          }),
          preconnect && preconnect.map(function (url, i) {
            return _react2.default.createElement("link", { key: i, rel: "preconnect", href: url });
          }),
          Object.keys(metaTags).map(function (name, i) {
            return metaTags[name] && (typeof metaTags[name] === "string" ? _react2.default.createElement("meta", { key: i, name: name, content: metaTags[name] }) : _react2.default.createElement("meta", _extends({ key: i }, metaTags[name])));
          }),
          isMobile && _react2.default.createElement("meta", {
            key: "apple-mobile-web-app-capable",
            name: "apple-mobile-web-app-capable",
            content: "yes"
          }),
          render.js && bodyBundleInHeader && this._injectScripts(preBundleScripts.scripts),
          render.js && bodyBundleInHeader && this._injectDllBundles(),
          render.js && bodyBundleInHeader && _react2.default.createElement("script", _extends({ src: bundles.js }, bundleProps)),
          _react2.default.createElement("link", { rel: "stylesheet", id: "bogel-font", href: fontURL }),
          pwaManifest ? _react2.default.createElement("link", { rel: "manifest", href: pwaManifest }) : null,
          this._injectScripts(_wmlInitScripts),
          this._injectScripts(firstScripts.scripts),
          this._injectIconStats(),
          this._injectCriticalCSS(),
          unbundledStyle && unbundledStyle.map(function (styleSheet, i) {
            return _react2.default.createElement("link", { key: i, rel: "stylesheet", href: styleSheet });
          }),
          bundles.css && _react2.default.createElement("link", { id: "bundledCss", rel: "stylesheet", href: bundles.css }),
          !!bundles.splitCss && _react2.default.createElement("link", { "data-href": bundles.splitCss }),
          this._injectDynamicData({ jwt: jwt, correlationId: correlationId, ccm: ccm, uiConfig: uiConfig, envInfo: envInfo, expoCookies: expoCookies }),
          this._injectScripts(initScripts.scripts),
          _react2.default.createElement("script", { id: "cdnHint", src: dummyScript, async: true, defer: true })
        ),
        _react2.default.createElement(
          "body",
          null,
          _react2.default.createElement("div", {
            className: "js-content",
            "data-tb-dyn": excludeTorbitContentCheck,
            dangerouslySetInnerHTML: { __html: content }
          }),
          render.js && !bodyBundleInHeader && this._injectScripts(preBundleScripts.scripts),
          _react2.default.createElement("script", { dangerouslySetInnerHTML: { __html: "_wml.perf.mark(\"before-bundle\")" } }),
          render.js && !bodyBundleInHeader && this._injectDllBundles(),
          render.js && !bodyBundleInHeader && _react2.default.createElement("script", _extends({ src: bundles.js }, bundleProps)),
          _react2.default.createElement("script", { dangerouslySetInnerHTML: { __html: "_wml.perf.mark(\"after-bundle\")" } }),
          this._injectScripts(postBundleScripts.scripts)
        )
      )
    );
  };

  return Index;
}(_react.Component);

Index.propTypes = {
  bundles: _propTypes2.default.shape({
    js: _propTypes2.default.string,
    css: _propTypes2.default.string,
    splitCss: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])
  }),
  asyncEnabled: _propTypes2.default.bool,
  deferEnabled: _propTypes2.default.bool,
  unbundledJS: _propTypes2.default.shape({
    enterHead: _propTypes2.default.array,
    preBundle: _propTypes2.default.array
  }),
  bodyBundleInHeader: _propTypes2.default.bool,
  dnsPrefetch: _propTypes2.default.array,
  metaTags: _propTypes2.default.object.isRequired,
  preconnect: _propTypes2.default.array,
  unbundledStyle: _propTypes2.default.array,
  content: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),
  bundleProps: _propTypes2.default.object,
  headerElements: _propTypes2.default.array,
  footerElements: _propTypes2.default.array,
  render: _propTypes2.default.shape({
    js: _propTypes2.default.bool
  }),
  prefetch: _propTypes2.default.string,
  excludeTorbitContentCheck: _propTypes2.default.bool,
  noPciCompliance: _propTypes2.default.bool,
  envInfo: _propTypes2.default.object,
  expoPrefix: _propTypes2.default.string,
  isMobile: _propTypes2.default.bool,
  request: _propTypes2.default.object
};

exports.default = Index;