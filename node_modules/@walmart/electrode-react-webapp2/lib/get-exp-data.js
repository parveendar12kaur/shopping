"use strict";

const Promise = require("bluebird");

// call into quimby to get the experimentation meta-data
const getExperimentationData = request => {
  const expCookie = request.state.exp;
  const quimbyService = request.app.services.quimby;

  // actual service call into quimby
  if (expCookie && quimbyService) {
    // pass the `exp` cookie needed by quimby service
    const quimbyOptions = {
      _headers: {
        cookie: `exp=${expCookie}`
      }
    };

    return quimbyService
      .withMeta(request)
      .getExperimentationData({}, quimbyOptions)
      .then(response => {
        const data = (response && response.data) || "{}";
        const exp = JSON.parse(data).exp;
        return exp;
      })
      .catch(() => {
        // empty catch block
        // do nothing if can't get experimentation data
      });
  } else {
    return Promise.resolve();
  }
};

module.exports = getExperimentationData;
