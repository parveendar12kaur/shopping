"use strict";

const _ = require("lodash");
const Cookies = require("@walmart/electrode-cookies");
const CCMInitializer = require("./ccm-initializer");
const pkg = require("../package.json");
const constants = require("./constants");
const fyi = require("@walmart/electrode-fyi");

const HTTP_ERROR = 500;

function register(server, options, next) {
  // initialize server's default store for CCM settings
  _.defaults(server.app, { ccm: {} });

  const ccmConfig = _.get(server, "settings.app.config.ccm", {});

  const ccmInitializer = new CCMInitializer(ccmConfig);

  const path = constants.REFRESH_PATH;

  const getCcmClient = () => {
    const client = _.get(server, "app.services.ccm", options.client);
    if (!client) {
      fyi.error(
        "@walmart/electrode-ccm-client not setup - https://gecgithub01.walmart.com/electrode/electrode-ccm-initializer#ccm-client"
      );
    }
    return client;
  };

  const getQuimbyClient = () => {
    const quimbyClient = _.get(server, "app.services.quimby", options.quimbyClient);

    if (!quimbyClient) {
      fyi.error(
        "@walmart/electrode-quimby-client not setup - https://gecgithub01.walmart.com/electrode/electrode-ccm-initializer#quimby-client"
      );
    }

    return quimbyClient;
  };

  server.route({
    method: "get",
    path,
    handler: (req, reply) => {
      ccmInitializer
        .handleRefresh({
          req,
          log: req.log.bind(req),
          container: server.app,
          client: getCcmClient(),
          quimbyClient: getQuimbyClient()
        })
        .then(() => {
          reply({ status: "OK" });
        })
        .catch(e => {
          reply({ error: e.stack }).code(HTTP_ERROR);
        });
    },
    config: {
      plugins: {
        "@walmart/csrf-jwt": {
          enabled: false
        }
      }
    }
  });

  const supportExperiments =
    options.supportExperiments !== false && ccmConfig.supportExperiments !== false;

  if (supportExperiments) {
    fyi.info("electrode-ccm: support for experiments ENABLED");

    server.ext("onPreHandler", (req, reply) => {
      if (req.path === path) return reply.continue();

      req.app.ccmReady = ccmInitializer
        .loadRequestCCM({
          req,
          log: req.log.bind(req),
          xpm: Cookies.get("xpm", { request: req }),
          xpa: Cookies.get("xpa", { request: req }),
          container: req.app,
          defaultContainer: server.app,
          client: getCcmClient(),
          quimbyClient: getQuimbyClient()
        })
        .catch(err => {
          req.log(["error"], { msg: "Loading request CCM failed", err });
        });

      return reply.continue();
    });
  } else {
    fyi.info("electrode-ccm: support for experiments DISABLED");

    server.ext("onPreHandler", (req, reply) => {
      if (req.path === path) return reply.continue();

      req.app.ccmReady = ccmInitializer.loadRequestCCM({
        req,
        log: req.log.bind(req),
        xpm: false,
        xpa: false,
        container: req.app,
        defaultContainer: server.app
      });

      return reply.continue();
    });
  }

  next();
}

register.attributes = { pkg };

module.exports = {
  register
};
