"use strict";

const ElectrodeSwapi = require("@walmart/electrode-swapi");
const Path = require("path");

class ServiceRegistryClient extends ElectrodeSwapi {
  constructor(config, swagger, providerName) {
    super(config, swagger, providerName);
  }

  static create(config, specOverride, providerName) {
    return ElectrodeSwapi.create(
      {Client: ServiceRegistryClient, config, specOverride, providerName}
    );
  }

  static get specFilename() {
    return Path.join(__dirname, "../data/swagger.yaml");
  }

  static get providerName() {
    return "registry";
  }

  //
  // Service name - cannot change
  //
  static get serviceName() {
    return "RegistryService";
  }

  //
  // service version - can be override by config
  //
  static get serviceVersion() {
    return "1.0.0";
  }

  //
  // since this is the registry client, before it's initialized, we can't
  // discover registry for the service registry.  must provide hard coded
  // data that allows connecting to the service registry.
  //
  static get serviceRegistry() {
    return {
      qa: {
        ENDPOINT: {
          host: "service-registry.qa.service-registry.platform.glb.qa.walmart.com"
        }
      },
      prod: {
        ENDPOINT: {
          host: "service-registry.prod.service-registry.platform.glb.prod.walmart.com"
        }
      }
    };
  }
}

module.exports = ServiceRegistryClient;
