"use strict";

/* eslint-disable max-len */

var Fs = require("fs");
var Path = require("path");

var _require = require("./constants"),
    HTTP_404 = _require.HTTP_404,
    HTTP_500 = _require.HTTP_500,
    STACK_TRACES_MARK = _require.STACK_TRACES_MARK;

function htmlifyError(err, withStack) {
  var html = "";

  var stack = err.stack;
  if (withStack !== false && stack) {
    if (process.env.NODE_ENV !== "production") {
      var rgx = new RegExp(process.cwd(), "g");
      html = stack.replace(rgx, "CWD");
    } else {
      var msg = typeof err.message === "string" ? err.message : "";
      html = "No stack for env " + process.env.NODE_ENV + "\n\nMessage: \"" + msg + "\"";
    }
  } else {
    html = err.message;
  }

  if (html) {
    return "<pre>" + html + "</pre>";
  }

  return "";
}

function makeStaticResponseLoader(dir) {
  var staticHtml = {};

  return function (request, routeOptions, data) {
    data = data || {};
    var status = data.status;

    if (!status) {
      status = HTTP_500;
    }

    var staticStatus = status === HTTP_404 ? status : HTTP_500;

    if (!staticHtml[staticStatus]) {
      var content = Fs.readFileSync(Path.join(dir, staticStatus + "-static.html"));
      staticHtml[staticStatus] = content.toString();
    }

    var stackHtml = htmlifyError(data, true);
    var html = staticHtml[staticStatus].replace(STACK_TRACES_MARK, stackHtml);

    return { status: status, html: html };
  };
}

module.exports = {
  staticResponse: makeStaticResponseLoader(Path.join(__dirname, "../../resources")),
  makeStaticResponseLoader: makeStaticResponseLoader,
  htmlifyError: htmlifyError
};
//# sourceMappingURL=index.js.map