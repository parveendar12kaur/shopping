// Load modules
var Lab = require("lab");
var Code = require("Code");
var lab = exports.lab = Lab.script();

var describe = lab.describe;
var it = lab.it;
var before = lab.before;
var after = lab.after;
var expect = Code.expect;

var Psych = require("..");

var AKAMAI_DEVICE_CHARACTERISTICS_REQUEST_HEADER_NAME = "x-akamai-device-characteristics";
var DEVICE_TYPE_TABLET = "tablet";
var DEVICE_TYPE_MOBILE = "mobile";
var DEVICE_TYPE_DESKTOP = "desktop";

describe("resolve-akamai-header", function () {
	var sampleAkamaiHeader = {};
	sampleAkamaiHeader[AKAMAI_DEVICE_CHARACTERISTICS_REQUEST_HEADER_NAME] = "accept_third_party_cookie=true; ajax_preferred_geoloc_api=gears; ajax_support_javascript=true; brand_name=Google; cookie_support=true; device_id=samsung_nexus_s_ver1_subandroid33; device_os=Android; device_os_version=2.3; dual_orientation=true; flash_lite_version=3_1; full_flash_supprt=true; gif_animated=false; html_preferred_dtd=html4; is_tablet=false; is_wireless_device=true; jpg=true; marketing_name=Samsung Nexus S; max_image_height=400; max_image_width=320; mobile_browser=Android Webkit; mobile_browser_version=2.3; model_name=Nexus S; pdf_support=true; physical_screen_height=100; physical_screen_width=60; png=true; preferred_markup=html_web_4_0; resolution_height=800; resolution_width=480; viewport_initial_scale=1.0; viewport_width=device_width_token; xhtml_file_upload=supported; xhtml_preferred_charset=iso-8859-1; xhtml_support_level=4; xhtml_supports_iframe=full; xhtml_supports_table_for_layout=true; xhtml_table_support=true; xhtmlmp_preferred_mime_type=text/html"

  it("should be a function", function (done) {
    expect(Psych.resolveAkamaiHeader).to.be.a.function();
    done();
  });

  it("should return null if no headers present", function (done) {
  	var deviceType = Psych.resolveAkamaiHeader(null);

   	expect(deviceType).to.be.an.null();
    done();
  });

  it("should return null if no akamai headers present", function (done) {
  	var deviceType = Psych.resolveAkamaiHeader({});

   	expect(deviceType).to.be.an.null();
    done();
  });

  it("should return device type string from accepted list using sample Akamai header", function (done) {
  	var deviceType = Psych.resolveAkamaiHeader(sampleAkamaiHeader);

   	expect(deviceType).to.be.an.string();
    done();
  });


  it("should return desktop device type for tablets", function (done) {
  	var tabletAkamaiHeader = {}
  	tabletAkamaiHeader[AKAMAI_DEVICE_CHARACTERISTICS_REQUEST_HEADER_NAME] = "; is_tablet=true; is_wireless_device=false"
  	var deviceType = Psych.resolveAkamaiHeader(tabletAkamaiHeader);

   	expect(deviceType).to.equal(DEVICE_TYPE_DESKTOP);
    done();
  });

  it("should return desktop device type for wireless tablets", function (done) {
    var tabletAkamaiHeader = {}
    tabletAkamaiHeader[AKAMAI_DEVICE_CHARACTERISTICS_REQUEST_HEADER_NAME] = "; is_tablet=true; is_wireless_device=true"
    var deviceType = Psych.resolveAkamaiHeader(tabletAkamaiHeader);

    expect(deviceType).to.equal(DEVICE_TYPE_DESKTOP);
    done();
  });

  it("should return mobile device type", function (done) {

  	var mobileAkamaiHeader = {}
  	mobileAkamaiHeader[AKAMAI_DEVICE_CHARACTERISTICS_REQUEST_HEADER_NAME] = "; is_tablet=false; is_wireless_device=true"
  	var deviceType = Psych.resolveAkamaiHeader(mobileAkamaiHeader);

   	expect(deviceType).to.equal(DEVICE_TYPE_MOBILE);
    done();
  });

  it("should return desktop device type", function (done) {
  	var desktopAkamaiHeader = {}
  	desktopAkamaiHeader[AKAMAI_DEVICE_CHARACTERISTICS_REQUEST_HEADER_NAME] = "; is_tablet=false; is_wireless_device=false"
  	var deviceType = Psych.resolveAkamaiHeader(desktopAkamaiHeader);

   	expect(deviceType).to.equal(DEVICE_TYPE_DESKTOP);
    done();
  });

  it("should return desktop device type when is_tablet and is_wireless are not present", function (done) {
  	var desktopAkamaiHeader = {}
  	desktopAkamaiHeader[AKAMAI_DEVICE_CHARACTERISTICS_REQUEST_HEADER_NAME] = "; accept_third_party_cookie=true; ajax_preferred_geoloc_api=gears;"
  	var deviceType = Psych.resolveAkamaiHeader(desktopAkamaiHeader);

    expect(deviceType).to.equal(DEVICE_TYPE_DESKTOP);
    done();
  });
});
