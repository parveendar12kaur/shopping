"use strict";

var getElementType = function getElementType(key) {
  var elementTypeMap = {
    description: "simpleName",
    keywords: "simpleName",
    robots: "simpleName",
    title: "title",
    model: "product",
    upc: "product",
    alternate: "alternate",
    multiple: "multiple"
  };

  if (elementTypeMap[key]) {
    return elementTypeMap[key];
  }
  if (/^(article|fb|og|twitter):/.test(key)) {
    return "simpleProp";
  }
  if (/^canonical(Prev|Next)?$/.test(key)) {
    return "canonical";
  }
  return undefined;
};

var getElementInfo = function getElementInfo(elementType, key, value) {
  switch (elementType) {
    case "simpleName":
      {
        return {
          el: "meta",
          elProps: { name: key, content: value }
        };
      }

    case "simpleProp":
      {
        return {
          el: "meta",
          elProps: { property: key, content: value }
        };
      }

    case "title":
      {
        return {
          el: "title",
          value: value
        };
      }

    case "product":
      {
        if (key === "upc") {
          key = "productID";
        }
        return {
          el: "meta",
          elProps: { itemProp: key, content: value, itemType: "http://schema.org/Product" }
        };
      }

    case "canonical":
      {
        if (key === "canonicalPrev") {
          key = "prev";
        } else if (key === "canonicalNext") {
          key = "next";
        }
        return {
          el: "link",
          elProps: { rel: key, href: value }
        };
      }

    case "alternate":
      {
        return {
          el: "link",
          elProps: { rel: key, href: value }
        };
      }

    case "multiple":
      {
        return {
          el: "link",
          elProps: value
        };
      }

    default:
      return null;
  }
};

module.exports = {
  getElementType: getElementType,
  getElementInfo: getElementInfo
};
//# sourceMappingURL=page-element-utils.js.map