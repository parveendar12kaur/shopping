{"version":3,"sources":["../src/page-element-utils.js"],"names":["getElementType","elementTypeMap","description","keywords","robots","title","model","upc","alternate","multiple","key","test","undefined","getElementInfo","elementType","value","el","elProps","name","content","property","itemProp","itemType","rel","href","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,iBAAiB,SAAjBA,cAAiB,MAAO;AAC5B,MAAMC,iBAAiB;AACrBC,iBAAa,YADQ;AAErBC,cAAU,YAFW;AAGrBC,YAAQ,YAHa;AAIrBC,WAAO,OAJc;AAKrBC,WAAO,SALc;AAMrBC,SAAK,SANgB;AAOrBC,eAAW,WAPU;AAQrBC,cAAU;AARW,GAAvB;;AAWA,MAAIR,eAAeS,GAAf,CAAJ,EAAyB;AACvB,WAAOT,eAAeS,GAAf,CAAP;AACD;AACD,MAAI,4BAA4BC,IAA5B,CAAiCD,GAAjC,CAAJ,EAA2C;AACzC,WAAO,YAAP;AACD;AACD,MAAI,0BAA0BC,IAA1B,CAA+BD,GAA/B,CAAJ,EAAyC;AACvC,WAAO,WAAP;AACD;AACD,SAAOE,SAAP;AACD,CAtBD;;AAwBA,IAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,WAAD,EAAcJ,GAAd,EAAmBK,KAAnB,EAA6B;AAClD,UAAQD,WAAR;AACE,SAAK,YAAL;AAAmB;AACjB,eAAO;AACLE,cAAI,MADC;AAELC,mBAAS,EAAEC,MAAMR,GAAR,EAAaS,SAASJ,KAAtB;AAFJ,SAAP;AAID;;AAED,SAAK,YAAL;AAAmB;AACjB,eAAO;AACLC,cAAI,MADC;AAELC,mBAAS,EAAEG,UAAUV,GAAZ,EAAiBS,SAASJ,KAA1B;AAFJ,SAAP;AAID;;AAED,SAAK,OAAL;AAAc;AACZ,eAAO;AACLC,cAAI,OADC;AAELD,iBAAOA;AAFF,SAAP;AAID;;AAED,SAAK,SAAL;AAAgB;AACd,YAAIL,QAAQ,KAAZ,EAAmB;AACjBA,gBAAM,WAAN;AACD;AACD,eAAO;AACLM,cAAI,MADC;AAELC,mBAAS,EAAEI,UAAUX,GAAZ,EAAiBS,SAASJ,KAA1B,EAAiCO,UAAU,2BAA3C;AAFJ,SAAP;AAID;;AAED,SAAK,WAAL;AAAkB;AAChB,YAAIZ,QAAQ,eAAZ,EAA6B;AAC3BA,gBAAM,MAAN;AACD,SAFD,MAEO,IAAIA,QAAQ,eAAZ,EAA6B;AAClCA,gBAAM,MAAN;AACD;AACD,eAAO;AACLM,cAAI,MADC;AAELC,mBAAS,EAAEM,KAAKb,GAAP,EAAYc,MAAMT,KAAlB;AAFJ,SAAP;AAID;;AAED,SAAK,WAAL;AAAkB;AAChB,eAAO;AACLC,cAAI,MADC;AAELC,mBAAS,EAAEM,KAAKb,GAAP,EAAYc,MAAMT,KAAlB;AAFJ,SAAP;AAID;;AAED,SAAK,UAAL;AAAiB;AACf,eAAO;AACLC,cAAI,MADC;AAELC,mBAASF;AAFJ,SAAP;AAID;;AAED;AACE,aAAO,IAAP;AA3DJ;AA6DD,CA9DD;;AAgEAU,OAAOC,OAAP,GAAiB;AACf1B,gCADe;AAEfa;AAFe,CAAjB","file":"page-element-utils.js","sourcesContent":["\"use strict\";\n\nconst getElementType = key => {\n  const elementTypeMap = {\n    description: \"simpleName\",\n    keywords: \"simpleName\",\n    robots: \"simpleName\",\n    title: \"title\",\n    model: \"product\",\n    upc: \"product\",\n    alternate: \"alternate\",\n    multiple: \"multiple\"\n  };\n\n  if (elementTypeMap[key]) {\n    return elementTypeMap[key];\n  }\n  if (/^(article|fb|og|twitter):/.test(key)) {\n    return \"simpleProp\";\n  }\n  if (/^canonical(Prev|Next)?$/.test(key)) {\n    return \"canonical\";\n  }\n  return undefined;\n};\n\nconst getElementInfo = (elementType, key, value) => {\n  switch (elementType) {\n    case \"simpleName\": {\n      return {\n        el: \"meta\",\n        elProps: { name: key, content: value }\n      };\n    }\n\n    case \"simpleProp\": {\n      return {\n        el: \"meta\",\n        elProps: { property: key, content: value }\n      };\n    }\n\n    case \"title\": {\n      return {\n        el: \"title\",\n        value: value\n      };\n    }\n\n    case \"product\": {\n      if (key === \"upc\") {\n        key = \"productID\";\n      }\n      return {\n        el: \"meta\",\n        elProps: { itemProp: key, content: value, itemType: \"http://schema.org/Product\" }\n      };\n    }\n\n    case \"canonical\": {\n      if (key === \"canonicalPrev\") {\n        key = \"prev\";\n      } else if (key === \"canonicalNext\") {\n        key = \"next\";\n      }\n      return {\n        el: \"link\",\n        elProps: { rel: key, href: value }\n      };\n    }\n\n    case \"alternate\": {\n      return {\n        el: \"link\",\n        elProps: { rel: key, href: value }\n      };\n    }\n\n    case \"multiple\": {\n      return {\n        el: \"link\",\n        elProps: value\n      };\n    }\n\n    default:\n      return null;\n  }\n};\n\nmodule.exports = {\n  getElementType,\n  getElementInfo\n};\n"]}