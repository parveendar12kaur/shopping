"use strict";

const metrics = require("./metrics");
const blocked = require("../blocked");
const defaults = require("./defaults");

class EventloopLatency {
  constructor(reportInterval) {
    this.detectIntervalId = undefined;
    this.reportIntervalId = undefined;
    this.reportInterval =
      reportInterval >= defaults.MIN_REPORTING_INTERVAL_MS
        ? reportInterval
        : defaults.REPORTING_INTERVAL_MS;
    this.delays = [];
  }

  startReporting(threshold) {
    this.detectIntervalId = blocked(delay => this.delays.push(delay), { threshold });
    this.reportIntervalId = setInterval(() => this._report(), this.reportInterval).unref();
  }

  stopReporting() {
    clearInterval(this.detectIntervalId);
    clearInterval(this.reportIntervalId);
    this.detectIntervalId = undefined;
    this.reportIntervalId = undefined;
  }

  _report() {
    if (this.delays.length > 0) {
      metrics.histogram("eventLoopDelay", this.delays);
      this.delays = [];
    } else {
      metrics.histogram("eventLoopDelay", 0);
    }
  }
}

module.exports = EventloopLatency;
